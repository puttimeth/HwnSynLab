$date
   Tue Nov  3 14:34:25 2020
$end
$version
  2019.1
$end
$timescale
  1ps
$end
$scope module nano_sc_system $end
$var wire 32 ! p_address [31:0] $end
$var wire 32 " p_data [31:0] $end
$var wire 32 # d_address [31:0] $end
$var wire 1 $ mem_wr $end
$var wire 32 % d_data [31:0] $end
$var reg 1 & clock $end
$var reg 1 ' nreset $end
$var wire 7 ( seg [6:0] $end
$var wire 1 ) dp $end
$var wire 4 * an [3:0] $end
$var wire 12 + sw [11:0] $end
$scope module CPU $end
$var wire 32 ! p_address [31:0] $end
$var wire 32 " p_data [31:0] $end
$var wire 32 # d_address [31:0] $end
$var wire 1 $ mem_wr $end
$var wire 32 % d_data [31:0] $end
$var wire 1 , clock $end
$var wire 1 - nreset $end
$var wire 32 . instruction [31:0] $end
$var wire 6 / opcode [5:0] $end
$var wire 5 0 rs [4:0] $end
$var wire 5 1 rt [4:0] $end
$var wire 5 2 rd [4:0] $end
$var wire 11 3 reserved [10:0] $end
$var wire 16 4 imm [15:0] $end
$var wire 26 5 addr [25:0] $end
$var reg 32 6 pc [31:0] $end
$var wire 1 7 sel_addpc $end
$var wire 1 8 sel_pc $end
$var wire 30 9 pc_add [29:0] $end
$var wire 1 : pc_cout $end
$var wire 30 ; pc_add_b [29:0] $end
$var wire 30 < addr_zeroext [29:0] $end
$var wire 30 = pc_new [29:0] $end
$var wire 32 > imm_ext [31:0] $end
$var wire 2 ? ext_ops [1:0] $end
$var reg 1 @ z_flag $end
$var reg 1 A c_flag $end
$var wire 1 B reg_wr $end
$var wire 1 C sel_wr $end
$var wire 1 D sel_data $end
$var wire 1 E sel_b $end
$var wire 1 F z_new $end
$var wire 1 G c_new $end
$var wire 3 H alu_ops [2:0] $end
$var wire 32 I A [31:0] $end
$var wire 32 J B [31:0] $end
$var wire 32 K data_selected [31:0] $end
$var wire 32 L data_S [31:0] $end
$var wire 32 M data_M [31:0] $end
$var wire 32 N B_selected [31:0] $end
$var wire 5 O rw [4:0] $end
$scope module PCADDER $end
$var wire 30 9 S [29:0] $end
$var wire 1 : Cout $end
$var wire 30 P A [29:0] $end
$var wire 30 ; B [29:0] $end
$var wire 1 Q Cin $end
$var parameter 32 R WIDTH [31:0] $end
$upscope $end
$scope module MUXADDPC $end
$var wire 30 ; out [29:0] $end
$var wire 30 S in0 [29:0] $end
$var wire 30 T in1 [29:0] $end
$var wire 1 7 sel $end
$var parameter 32 U WIDTH [31:0] $end
$upscope $end
$scope module MUXSELPC $end
$var wire 30 = out [29:0] $end
$var wire 30 9 in0 [29:0] $end
$var wire 30 < in1 [29:0] $end
$var wire 1 8 sel $end
$var parameter 32 V WIDTH [31:0] $end
$upscope $end
$scope module EXTENDER $end
$var reg 32 W data32 [31:0] $end
$var wire 16 4 data16 [15:0] $end
$var wire 2 ? ext_ops [1:0] $end
$upscope $end
$scope module MUXRW $end
$var wire 5 O out [4:0] $end
$var wire 5 2 in0 [4:0] $end
$var wire 5 1 in1 [4:0] $end
$var wire 1 C sel $end
$var parameter 32 X WIDTH [31:0] $end
$upscope $end
$scope module REGFILE $end
$var wire 32 I A [31:0] $end
$var wire 32 J B [31:0] $end
$var wire 32 K data [31:0] $end
$var wire 5 0 ra [4:0] $end
$var wire 5 1 rb [4:0] $end
$var wire 5 O rw [4:0] $end
$var wire 1 Y nwr $end
$var wire 1 , clock $end
$var integer 32 Z i $end
$upscope $end
$scope module MUXDATA $end
$var wire 32 K out [31:0] $end
$var wire 32 L in0 [31:0] $end
$var wire 32 M in1 [31:0] $end
$var wire 1 D sel $end
$var parameter 32 [ WIDTH [31:0] $end
$upscope $end
$scope module MUXB $end
$var wire 32 N out [31:0] $end
$var wire 32 J in0 [31:0] $end
$var wire 32 > in1 [31:0] $end
$var wire 1 E sel $end
$var parameter 32 \ WIDTH [31:0] $end
$upscope $end
$scope module ALU $end
$var reg 32 ] S [31:0] $end
$var wire 1 F z $end
$var reg 1 ^ Cout $end
$var wire 32 I A [31:0] $end
$var wire 32 N B [31:0] $end
$var wire 1 _ Cin $end
$var wire 3 H alu_ops [2:0] $end
$upscope $end
$scope module CONTROLUNIT $end
$var reg 1 ` sel_pc $end
$var reg 1 a sel_addpc $end
$var reg 1 b sel_wr $end
$var reg 1 c sel_b $end
$var reg 1 d sel_data $end
$var reg 1 e reg_wr $end
$var reg 1 f mem_wr $end
$var reg 2 g ext_ops [1:0] $end
$var reg 3 h alu_ops [2:0] $end
$var wire 6 / opcode [5:0] $end
$var wire 1 F z_flag $end
$var wire 11 3 reserved [10:0] $end
$var parameter 6 i ORI [5:0] $end
$var parameter 6 j ORUI [5:0] $end
$var parameter 6 k ADD [5:0] $end
$var parameter 6 l LW [5:0] $end
$var parameter 6 m SW [5:0] $end
$var parameter 6 n BEQ [5:0] $end
$var parameter 6 o JMP [5:0] $end
$upscope $end
$upscope $end
$scope module PROGMEM $end
$var wire 32 " data [31:0] $end
$var wire 16 p address [15:0] $end
$var parameter 32 q DATA_WIDTH [31:0] $end
$var parameter 32 r ADDR_WIDTH [31:0] $end
$upscope $end
$scope module DATAMEM $end
$var wire 32 % data [31:0] $end
$var wire 16 s address [15:0] $end
$var wire 1 $ wr $end
$var wire 1 t clock $end
$var wire 12 + sw [11:0] $end
$var wire 7 ( seg [6:0] $end
$var wire 4 * an [3:0] $end
$var reg 4 u num0 [3:0] $end
$var reg 4 v num1 [3:0] $end
$var reg 4 w num2 [3:0] $end
$var reg 4 x num3 [3:0] $end
$var wire 1 ) dp $end
$var wire 1 y an0 $end
$var wire 1 z an1 $end
$var wire 1 { an2 $end
$var wire 1 | an3 $end
$var reg 32 } data_out [31:0] $end
$var integer 32 ~ i $end
$var parameter 32 !! DATA_WIDTH [31:0] $end
$var parameter 32 "! ADDR_WIDTH [31:0] $end
$scope module quad7seg $end
$var wire 7 ( seg [6:0] $end
$var wire 1 ) dp $end
$var wire 1 #! an0 $end
$var wire 1 $! an1 $end
$var wire 1 %! an2 $end
$var wire 1 &! an3 $end
$var wire 4 '! num0 [3:0] $end
$var wire 4 (! num1 [3:0] $end
$var wire 4 )! num2 [3:0] $end
$var wire 4 *! num3 [3:0] $end
$var wire 1 t clk $end
$var reg 2 +! ns [1:0] $end
$var reg 2 ,! ps [1:0] $end
$var reg 4 -! dispEn [3:0] $end
$var reg 4 .! hexIn [3:0] $end
$var wire 7 /! segments [6:0] $end
$scope module segDecode $end
$var reg 7 0! segments [6:0] $end
$var wire 4 1! hex [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx !
b100000 !!
bx "
b10000 "!
bx #
x#!
x$
x$!
bx %
x%!
0&
x&!
0'
bx '!
bx (
bx (!
0)
bx )!
bx *
bx *!
bz +
bx +!
0,
bx ,!
0-
bx -!
bx .
bx .!
bx /
bx /!
bx 0
bx 0!
bx 1
bx 1!
bx 2
bx 3
bx 4
bx 5
bx 6
x7
x8
bx 9
x:
bx ;
b0xxxxxxxxxxxxxxxxxxxxxxxxxx <
bx =
bx >
bx ?
x@
xA
xB
xC
xD
xE
xF
xG
bx H
bx I
bx J
bx K
bx L
bx M
bx N
bx O
bx P
1Q
b11110 R
b0 S
bx T
b11110 U
b11110 V
bx W
b101 X
xY
b100000 Z
b100000 [
b100000 \
bx ]
x^
x_
x`
xa
xb
xc
xd
xe
xf
bx g
bx h
b10000 i
b10001 j
b1 k
b11000 l
b11100 m
b100100 n
b110000 o
bx p
b100000 q
b10000 r
bx s
0t
bx u
bx v
bx w
bx x
zy
zz
z{
z|
bx }
bx ~
$end
#20000
b0 !
b1000000110001100000000000000101 "
b101 #
0$
b110 %
1&
1,
bx ,!
b1000000110001100000000000000101 .
b10000 /
b110 0
b110 1
b0 2
b101 3
b101 4
b110001100000000000000101 5
b0 6
07
08
b1 9
0:
b0 ;
b110001100000000000000101 <
b1 =
b101 >
b0 ?
0@
0A
1B
1C
0D
1E
0F
0G
b10 H
b0 I
b0 J
b101 K
b101 L
b110 M
b101 N
b110 O
b0 P
b101 T
b101 W
0Y
b101 ]
0^
0_
0`
0a
1b
1c
0d
1e
0f
b0 g
b10 h
b0 p
b101 s
1t
b110 }
#40000
0&
1'
0,
1-
0t
#60000
b100 !
b1000000111001110000000000000110 "
b110 #
b111 %
1&
1,
bx ,!
b1000000111001110000000000000110 .
b10000 /
b111 0
b111 1
b0 2
b110 3
b110 4
b111001110000000000000110 5
b100 6
b10 9
0:
b0 ;
b111001110000000000000110 <
b10 =
b110 >
0F
b0 I
b0 J
b110 K
b110 L
b111 M
b110 N
b111 O
b1 P
b110 T
b110 W
b110 ]
0^
b10 h
b1 p
b110 s
1t
b111 }
#80000
0&
0,
0t
#100000
b1000 !
b100110001110100000000000000 "
b1011 #
b0 %
1&
1,
bx ,!
b100110001110100000000000000 .
b1 /
b110 0
b111 1
b1000 2
b0 3
b100000000000000 4
b110001110100000000000000 5
b1000 6
b11 9
0:
b0 ;
b110001110100000000000000 <
b11 =
b100000000000000 >
0C
0E
0F
b0 H
b101 I
b110 J
b1011 K
b1011 L
b0 M
b110 N
b1000 O
b10 P
b100000000000000 T
b100000000000000 W
b1011 ]
0^
0`
0a
0b
0c
0d
1e
0f
b0 g
b0 h
b10 p
b1011 s
1t
b0 }
#120000
0&
0,
0t
#140000
b1100 !
b100110001110100100000000001 "
b11111111111111111111111111111111 #
bx %
1&
1,
bx ,!
b100110001110100100000000001 .
b1 /
b110 0
b111 1
b1001 2
b1 3
b100100000000001 4
b110001110100100000000001 5
b1100 6
b100 9
0:
b0 ;
b110001110100100000000001 <
b100 =
b100100000000001 >
0F
1G
b1 H
b101 I
b110 J
b11111111111111111111111111111111 K
b11111111111111111111111111111111 L
bx M
b110 N
b1001 O
b11 P
b100100000000001 T
b100100000000001 W
b11111111111111111111111111111111 ]
1^
b1 h
b11 p
b1111111111111111 s
1t
bx }
#160000
0&
0,
0t
#180000
b10000 !
b100110001110100100000000010 "
b111 #
b0 %
1&
1,
bx ,!
b100110001110100100000000010 .
b1 /
b110 0
b111 1
b1001 2
b10 3
b100100000000010 4
b110001110100100000000010 5
b10000 6
b101 9
0:
b0 ;
b110001110100100000000010 <
b101 =
b100100000000010 >
1A
0F
0G
b10 H
b101 I
b110 J
b111 K
b111 L
b0 M
b110 N
b100 P
b100100000000010 T
b100100000000010 W
b111 ]
0^
1_
b10 h
b100 p
b111 s
1t
b0 }
#200000
0&
0,
0t
#220000
b10100 !
b100110001110100100000000011 "
b100 #
b101 %
1&
1,
bx ,!
b100110001110100100000000011 .
b1 /
b110 0
b111 1
b1001 2
b11 3
b100100000000011 4
b110001110100100000000011 5
b10100 6
b110 9
0:
b0 ;
b110001110100100000000011 <
b110 =
b100100000000011 >
0A
0F
b11 H
b101 I
b110 J
b100 K
b100 L
b101 M
b110 N
b101 P
b100100000000011 T
b100100000000011 W
b100 ]
0^
0_
b11 h
b101 p
b100 s
1t
b101 }
#240000
0&
0,
0t
#260000
b11000 !
b100110001110100100000000100 "
b11 #
b100 %
1&
1,
bx ,!
b100110001110100100000000100 .
b1 /
b110 0
b111 1
b1001 2
b100 3
b100100000000100 4
b110001110100100000000100 5
b11000 6
b111 9
0:
b0 ;
b110001110100100000000100 <
b111 =
b100100000000100 >
0F
b100 H
b101 I
b110 J
b11 K
b11 L
b100 M
b110 N
b110 P
b100100000000100 T
b100100000000100 W
b11 ]
0^
b100 h
b110 p
b11 s
1t
b100 }
#280000
0&
0,
0t
#300000
b11100 !
b100110010000100100000000101 "
b11111111111111111111111111111011 #
bx %
1&
1,
bx ,!
b100110010000100100000000101 .
b1 /
b110 0
b1000 1
b1001 2
b101 3
b100100000000101 4
b110010000100100000000101 5
b11100 6
b1000 9
0:
b0 ;
b110010000100100000000101 <
b1000 =
b100100000000101 >
0F
b101 H
b101 I
b1011 J
b11111111111111111111111111111011 K
b11111111111111111111111111111011 L
bx M
b1011 N
b1001 O
b111 P
b100100000000101 T
b100100000000101 W
b11111111111111111111111111111011 ]
0^
b101 h
b111 p
b1111111111111011 s
1t
bx }
#320000
0&
0,
0t
#340000
b100000 !
b100110010000100100000000110 "
b11111111111111111111111111111010 #
1&
1,
bx ,!
b100110010000100100000000110 .
b1 /
b110 0
b1000 1
b1001 2
b110 3
b100100000000110 4
b110010000100100000000110 5
b100000 6
b1001 9
0:
b0 ;
b110010000100100000000110 <
b1001 =
b100100000000110 >
0F
b110 H
b101 I
b1011 J
b11111111111111111111111111111010 K
b11111111111111111111111111111010 L
b1011 N
b1000 P
b100100000000110 T
b100100000000110 W
b11111111111111111111111111111010 ]
0^
b110 h
b1000 p
b1111111111111010 s
1t
bx }
#360000
0&
0,
0t
#380000
b100100 !
bx "
bx #
bx %
1&
1,
bx ,!
bx .
bx /
bx 0
bx 1
bx 2
bx 3
bx 4
bx 5
b100100 6
b1010 9
0:
b0 ;
b0xxxxxxxxxxxxxxxxxxxxxxxxxx <
b1010 =
b0xxxxxxxxxxxxxxxx >
0B
xF
xG
b0 H
bx I
bx J
bx K
bx L
bx N
bx O
b1001 P
b0xxxxxxxxxxxxxxxx T
b0xxxxxxxxxxxxxxxx W
1Y
bx ]
x^
0`
0a
0b
0c
0d
0e
0f
b0 g
b0 h
b1001 p
bx s
1t
bx }
#400000
0&
0,
0t
#420000
b101000 !
bx "
1&
1,
bx ,!
b101000 6
b1011 9
0:
b1011 =
x@
xA
b1010 P
x_
b1010 p
1t
#440000
0&
0,
0t
#460000
b101100 !
bx "
1&
1,
bx ,!
b101100 6
b1100 9
0:
b1100 =
b1011 P
b1011 p
1t
#480000
0&
0,
0t
#500000
b110000 !
bx "
1&
1,
bx ,!
b110000 6
b1101 9
0:
b1101 =
b1100 P
b1100 p
1t
#520000
0&
0,
0t
#540000
b110100 !
bx "
1&
1,
bx ,!
b110100 6
b1110 9
0:
b1110 =
b1101 P
b1101 p
1t
#560000
0&
0,
0t
#580000
b111000 !
bx "
1&
1,
bx ,!
b111000 6
b1111 9
0:
b1111 =
b1110 P
b1110 p
1t
#600000
0&
0,
0t
#620000
b111100 !
bx "
1&
1,
bx ,!
b111100 6
b10000 9
0:
b10000 =
b1111 P
b1111 p
1t
#640000
0&
0,
0t
#660000
b1000000 !
bx "
1&
1,
bx ,!
b1000000 6
b10001 9
0:
b10001 =
b10000 P
b10000 p
1t
#680000
0&
0,
0t
#700000
b1000100 !
bx "
1&
1,
bx ,!
b1000100 6
b10010 9
0:
b10010 =
b10001 P
b10001 p
1t
#720000
0&
0,
0t
#740000
b1001000 !
bx "
1&
1,
bx ,!
b1001000 6
b10011 9
0:
b10011 =
b10010 P
b10010 p
1t
#760000
0&
0,
0t
#780000
b1001100 !
bx "
1&
1,
bx ,!
b1001100 6
b10100 9
0:
b10100 =
b10011 P
b10011 p
1t
#800000
0&
0,
0t
#820000
b1010000 !
bx "
1&
1,
bx ,!
b1010000 6
b10101 9
0:
b10101 =
b10100 P
b10100 p
1t
#840000
0&
0,
0t
#860000
b1010100 !
bx "
1&
1,
bx ,!
b1010100 6
b10110 9
0:
b10110 =
b10101 P
b10101 p
1t
#880000
0&
0,
0t
#900000
b1011000 !
bx "
1&
1,
bx ,!
b1011000 6
b10111 9
0:
b10111 =
b10110 P
b10110 p
1t
#920000
0&
0,
0t
#940000
b1011100 !
bx "
1&
1,
bx ,!
b1011100 6
b11000 9
0:
b11000 =
b10111 P
b10111 p
1t
#960000
0&
0,
0t
#980000
b1100000 !
bx "
1&
1,
bx ,!
b1100000 6
b11001 9
0:
b11001 =
b11000 P
b11000 p
1t
#1000000
0&
0,
0t
